@model IEnumerable<MembersListViewModel>

@{ ViewData["Title"] = "Index"; }

<h1 class="text-center text-warning">Members List</h1>

@{
                <partial name="_SearchView" /> }
<p>
    <a asp-action="Add" class="btn btn-warning">Add New</a>
</p>
<div class="container myTable">

    <div class="row">
        <div class="col-4 text-dark h3">
            <a asp-action="Index" asp-route-sortOrder="@ViewData["FullNameSortParm"]">@Html.DisplayNameFor(model => model.FullName)</a>
          @*  @Html.DisplayNameFor(model => model.FullName)*@
        </div>
        <div class="col-4 text-dark h3">
            @Html.DisplayNameFor(model => model.Personnummer)
        </div>
    </div>
</div>
<div class="container myTable legend">
@foreach (var item in Model)
{

    <div class="row">
        <div class="col">
            @Html.DisplayFor(modelItem => item.FullName)
        </div>
        <div class="col ">
            @Html.DisplayFor(modelItem => item.Personnummer)
        </div>
        <div class="col">
            <ul class="list-group list-group-horizontal bg-transparent justify-content-between ">
                <li class="list-group-item bg-transparent border-0 text-dark "><a asp-action="Edit" asp-route-id="@item.Id">Edit</a></li>
                <li class="list-group-item bg-transparent border-0 text-dark "><a asp-action="Details" asp-route-id="@item.Id">Details</a></li>
                <li class="list-group-item bg-transparent border-0 text-dark "><a asp-action="Remove" asp-route-id="@item.Id">Remove</a></li>
            </ul>
        </div>
    </div>
}
</div>

}



<p class="text-warning"> Chose results per page:
    <a href="@Url.Action("Index", new {page = ViewBag.Page , pagesize = 10 })" class="btn btn-warning">
        10
    </a>
    <a href="@Url.Action("Index", new { page = ViewBag.Page , pagesize = 20   })" class="btn btn-warning">
        20
    </a>
    <a href="@Url.Action("Index", new { page = ViewBag.Page , pagesize = 30 })" class="btn btn-warning">
        30
    </a>
    <a href="@Url.Action("Index", new { page = ViewBag.Page , pagesize = 40  })" class="btn btn-warning">
        40
    </a>
    <a href="@Url.Action("Index", new { page = ViewBag.Page , pagesize = 50 })" class="btn btn-warning">
        50
    </a>

</p>

@if (ViewBag.Page > 0)
{
<a href="@Url.Action("Index", new { page = ViewBag.Page - 1 })"
   class="btn btn-warning mr-1">
    &laquo; Prev
</a>}
@if (ViewBag.Page < ViewBag.MaxPage)
{
<a href="@Url.Action("Index", new { page = ViewBag.Page + 1 })"
   class="btn btn-warning">
    Next &raquo;
</a> } @*https://via.placeholder.com/150*@
  

